{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home m-3\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-center mt-5 mb-5\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spinner-border text-primary\",\n  role: \"status\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = [\"src\", \"alt\"];\nconst _hoisted_6 = {\n  class: \"card-title mt-2\"\n};\nconst _hoisted_7 = {\n  class: \"card-text\"\n};\nconst _hoisted_8 = {\n  class: \"text-muted\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"text-muted\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"btn btn-dark\",\n  type: \"submit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.load ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _hoisted_4)) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: post.id,\n      class: \"flex-cont\"\n    }, [_createVNode(_component_router_link, {\n      to: '/home/lives/' + post.id\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"img\", {\n        class: \"\",\n        src: 'https://gravatar.com/avatar/' + post.email + '?s=500',\n        alt: post.email\n      }, null, 8 /* PROPS */, _hoisted_5)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"h5\", _hoisted_6, [_createElementVNode(\"b\", null, _toDisplayString(post.title), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_7, [_createElementVNode(\"small\", _hoisted_8, _toDisplayString(post.username), 1 /* TEXT */), _hoisted_9, _createElementVNode(\"small\", _hoisted_10, _toDisplayString(post.postdate), 1 /* TEXT */)]), _createElementVNode(\"form\", {\n      onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.removeLive && $options.removeLive(...args), [\"prevent\"]))\n    }, [post.username == $data.userData.displayName ? (_openBlock(), _createElementBlock(\"button\", _hoisted_11, \" 削除 \")) : _createCommentVNode(\"v-if\", true)], 32 /* HYDRATE_EVENTS */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","role","_hoisted_3","type","_createElementBlock","_hoisted_1","$data","load","_hoisted_2","_hoisted_4","_Fragment","_renderList","posts","post","key","id","_createVNode","_component_router_link","to","src","email","alt","_hoisted_6","_toDisplayString","title","_hoisted_7","_hoisted_8","username","_hoisted_9","_hoisted_10","postdate","onSubmit","_cache","_withModifiers","args","$options","removeLive","userData","displayName","_hoisted_11"],"sources":["/Users/moka6652/Desktop/CAPSET-Frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home m-3\">\n    <div v-if=\"load\" class=\"text-center mt-5 mb-5\">\n      <div class=\"spinner-border text-primary\" role=\"status\"></div>\n    </div>\n\n    <div v-for=\"post in posts\" :key=\"post.id\" class=\"flex-cont\">\n      <router-link :to=\"'/home/lives/' + post.id\">\n        <img\n          class=\"\"\n          :src=\"'https://gravatar.com/avatar/' + post.email + '?s=500'\"\n          :alt=\"post.email\"\n        />\n      </router-link>\n\n      <h5 class=\"card-title mt-2\">\n        <b>{{ post.title }}</b>\n      </h5>\n\n      <p class=\"card-text\">\n        <small class=\"text-muted\">{{ post.username }}</small\n        ><br />\n        <small class=\"text-muted\">{{ post.postdate }}</small>\n      </p>\n\n      <form @submit.prevent=\"removeLive\">\n        <button\n          v-if=\"post.username == userData.displayName\"\n          class=\"btn btn-dark\"\n          type=\"submit\"\n        >\n          削除\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase/app\";\nimport axios from \"axios\";\nimport forge from \"node-forge\";\n\nexport default {\n  data() {\n    return {\n      userData: \"\",\n      posts: [],\n      md5: \"\",\n      load: true,\n    };\n  },\n  created() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.userData = user;\n        // user.email を md5 に変換\n        const md = forge.md.md5.create();\n        md.update(user.email);\n        this.md5 = md.digest().toHex();\n      }\n    });\n  },\n  mounted() {\n    axios\n      .get(\"https://capset-backend-api.glitch.me/all\")\n      .then((response) => {\n        this.posts = response.data;\n        this.load = false;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  },\n  methods: {\n    removeLive() {\n      axios\n        .post(\"https://capset-backend-api.glitch.me/delete/\" + this.md5)\n        .then((response) => {\n          console.log(response.data);\n          alert(\"ライブ配信を削除しました！\");\n          // リロード\n          this.$router.go({\n            path: this.$router.currentRoute.path,\n            force: true,\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n          alert(\n            \"ライブ配信を削除できません...ログインしているアカウントが正しいか確認してください。\"\n          );\n        });\n    },\n  },\n};\n</script>\n\n<style>\n.home {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n}\n\n.flex-cont {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  border: solid #000 1px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;;EACFA,KAAK,EAAC;;gCACrBC,mBAAA,CAA6D;EAAxDD,KAAK,EAAC,6BAA6B;EAACE,IAAI,EAAC;;oBAA9CC,UAA6D,C;;;EAYzDH,KAAK,EAAC;AAAiB;;EAIxBA,KAAK,EAAC;AAAW;;EACXA,KAAK,EAAC;AAAY;gCACxBC,mBAAA,CAAM;;EACAD,KAAK,EAAC;AAAY;;;EAMvBA,KAAK,EAAC,cAAc;EACpBI,IAAI,EAAC;;;;uBA5BbC,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCOC,KAAA,CAAAC,IAAI,I,cAAfH,mBAAA,CAEM,OAFNI,UAEM,EAAAC,UAAA,K,sDAENL,mBAAA,CA4BMM,SAAA,QAAAC,WAAA,CA5BcL,KAAA,CAAAM,KAAK,EAAbC,IAAI;yBAAhBT,mBAAA,CA4BM;MA5BsBU,GAAG,EAAED,IAAI,CAACE,EAAE;MAAEhB,KAAK,EAAC;QAC9CiB,YAAA,CAMcC,sBAAA;MANAC,EAAE,mBAAmBL,IAAI,CAACE;;wBACtC,MAIE,CAJFf,mBAAA,CAIE;QAHAD,KAAK,EAAC,EAAE;QACPoB,GAAG,mCAAmCN,IAAI,CAACO,KAAK;QAChDC,GAAG,EAAER,IAAI,CAACO;;;iDAIfpB,mBAAA,CAEK,MAFLsB,UAEK,GADHtB,mBAAA,CAAuB,WAAAuB,gBAAA,CAAjBV,IAAI,CAACW,KAAK,iB,GAGlBxB,mBAAA,CAII,KAJJyB,UAII,GAHFzB,mBAAA,CACC,SADD0B,UACC,EAAAH,gBAAA,CAD4BV,IAAI,CAACc,QAAQ,kBACzCC,UAAM,EACP5B,mBAAA,CAAqD,SAArD6B,WAAqD,EAAAN,gBAAA,CAAxBV,IAAI,CAACiB,QAAQ,iB,GAG5C9B,mBAAA,CAQO;MARA+B,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;QAEvBrB,IAAI,CAACc,QAAQ,IAAIrB,KAAA,CAAA+B,QAAQ,CAACC,WAAW,I,cAD7ClC,mBAAA,CAMS,UANTmC,WAMS,EAFR,MAED,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}