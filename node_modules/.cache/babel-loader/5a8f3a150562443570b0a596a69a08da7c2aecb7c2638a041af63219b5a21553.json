{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user pt-5 m-3\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"mb-5\"\n}, \"新規ライブを作成\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"mb-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-label\"\n}, \"タイトル\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"mb-5\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-label\"\n}, \"概要\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  key: 0,\n  type: \"submit\",\n  class: \"btn btn-dark btn-block\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.createLive && $options.createLive(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    class: \"form-control\",\n    placeholder: \"タイトルを入力\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.detail = $event),\n    class: \"form-control\",\n    rows: \"5\",\n    placeholder: \"概要を入力\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.detail]])]), $data.textLine ? (_openBlock(), _createElementBlock(\"button\", _hoisted_7, \"これでライブを作成する！\")) : _createCommentVNode(\"v-if\", true)], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","createLive","_hoisted_3","_hoisted_4","$data","title","$event","placeholder","_hoisted_5","_hoisted_6","detail","rows","textLine","_hoisted_7"],"sources":["/Users/moka6652/Desktop/CAPSET-Frontend/src/views/CreateView.vue"],"sourcesContent":["<template>\n  <div class=\"user pt-5 m-3\">\n    <h4 class=\"mb-5\">新規ライブを作成</h4>\n    <form @submit.prevent=\"createLive\">\n      <div class=\"mb-3\">\n        <label class=\"form-label\">タイトル</label>\n        <input v-model=\"title\" class=\"form-control\" placeholder=\"タイトルを入力\" />\n      </div>\n      <div class=\"mb-5\">\n        <label class=\"form-label\">概要</label>\n        <textarea\n          v-model=\"detail\"\n          class=\"form-control\"\n          rows=\"5\"\n          placeholder=\"概要を入力\"\n        ></textarea>\n      </div>\n      <button v-if=\"textLine\" type=\"submit\" class=\"btn btn-dark btn-block\">これでライブを作成する！</button>\n    </form>\n  </div>\n</template>\n  \n<script>\nimport firebase from \"firebase/app\";\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      textLine: false,\n      username: \"\",\n      email: \"\",\n      title: \"\",\n      detail: \"\",\n    };\n  },\n  watch: {\n    title(newVal) {\n        if (newVal.length > 0) {\n            this.textLine = true;\n        } else {\n            this.textLine = false;\n        }\n    }\n  },\n  created() {\n    firebase.auth().onAuthStateChanged((user) => {\n      this.username = user.displayName;\n      this.email = user.email;\n    });\n  },\n  methods: {\n    createLive() {\n      axios\n        .post(\n          \"https://capset-backend-api.glitch.me/post\" +\n            \"?username=\" +\n            this.username +\n            \"&email=\" +\n            this.email +\n            \"&title=\" +\n            this.title +\n            \"&detail=\" +\n            this.detail\n        )\n        .then((response) => {\n          console.log(response.data);\n          alert(\"ライブ配信を作成しました！\");\n          // リロード\n          this.$router.go({\n            path: this.$router.currentRoute.path,\n            force: true,\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n          alert(\"ライブ配信を作成できませんでした...\\n既にライブ配信を作成している場合は削除してからもう一度お試しください。\");\n        });\n    },\n  },\n};\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAe;gCACxBC,mBAAA,CAA8B;EAA1BD,KAAK,EAAC;AAAM,GAAC,UAAQ;;EAElBA,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAsC;EAA/BD,KAAK,EAAC;AAAY,GAAC,MAAI;;EAG3BA,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAoC;EAA7BD,KAAK,EAAC;AAAY,GAAC,IAAE;;;EAQNE,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;;;uBAhBhDG,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,UAA8B,EAC9BJ,mBAAA,CAeO;IAfAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BR,mBAAA,CAGM,OAHNW,UAGM,GAFJC,UAAsC,E,gBACtCZ,mBAAA,CAAoE;+DAApDa,KAAA,CAAAC,KAAK,GAAAC,MAAA;IAAEhB,KAAK,EAAC,cAAc;IAACiB,WAAW,EAAC;iDAAxCH,KAAA,CAAAC,KAAK,E,KAEvBd,mBAAA,CAQM,OARNiB,UAQM,GAPJC,UAAoC,E,gBACpClB,mBAAA,CAKY;+DAJDa,KAAA,CAAAM,MAAM,GAAAJ,MAAA;IACfhB,KAAK,EAAC,cAAc;IACpBqB,IAAI,EAAC,GAAG;IACRJ,WAAW,EAAC;iDAHHH,KAAA,CAAAM,MAAM,E,KAMLN,KAAA,CAAAQ,QAAQ,I,cAAtBnB,mBAAA,CAA0F,UAA1FoB,UAA0F,EAArB,cAAY,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}